import java.io.File;


import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.*;
/**
 * 
 * @author Salvador Del Rio Torres
 *
 */
public class MagicalCreaturesGame {
	public static File file = new File("creatures.txt");
	public static Scanner scan;
	public static ArrayList<MagicalCreature> creatures = new ArrayList<>();
	public static int MOVES;
	public static int alive;
	public static void main(String[] args) {
		// TODO Auto-generated method stub		
		String line;
		String[] temp;
		
		try {
			scan = new Scanner(file);
		} catch(Exception e) {
			System.out.println("Error opening the file!");
		}
		
		while (scan.hasNextLine()) {
			line = scan.nextLine();
			temp = line.split(",");
			
			switch(temp[1]) {
			case "Dragon":
				creatures.add(new Dragon(temp[0],temp[1],temp[2], Integer.valueOf(temp[3])));
				break;
			
			case "Elf":
				creatures.add(new Elf(temp[0],temp[1],temp[2], Integer.valueOf(temp[3])));
				break;
			
			case "Goblin":
				creatures.add(new Goblin(temp[0],temp[1],temp[2], Integer.valueOf(temp[3])));
				break;

			case "Genie":
				creatures.add(new Genie(temp[0],temp[1],temp[2], Integer.valueOf(temp[3])));
				break;
				
			default:
				creatures.add(new MagicalCreature(temp[0],temp[1],temp[2], Integer.valueOf(temp[3])));
			}
			alive++;
		}

		war();

	}
	
	public static void war() {
		Random rand = new Random();
		int alpha=0, beta=0, i = 0, j = 10;
		//j is when it displays the surviving creatures
		
		System.out.println("How many moves do you want to play the game for? ");
		Scanner scan = new Scanner(System.in);
		MOVES = scan.nextInt();
		
		System.out.println("Would you like to give Elves a shield? Y/N");
		String input2 = scan.next();
		
		System.out.println("Would you like to give genies a wand? Y/N");
		String input3 = scan.next();
		
		//call specific elf object within array
		if(input2.equals("Y") || input2.equals("y")) { 
			for (int y = 0; y < creatures.size();y++) {
				if (creatures.get(y).getType() == "Elf") {
					Elf something = (Elf) creatures.get(y);
					something.setShield(true);
				}
			}
        }
		
		
		if(input3.equals("Y") || input3.equals("y"))
        {
			for (int y = 0;y < creatures.size();y++) {
				if (creatures.get(y).getType() == "Genie") {
					Genie something = (Genie) creatures.get(y);
					something.setWand(true);
				}
			}
        }
		while(i< MOVES) {			
			//finish this
			//make creatures fight each other and the attacker(alpha) and victim(beta) are chosen randomly
			/*have alpha be a random number 
			 * have beta be a random number
			 * have alpha kill beta
			 * display creatures that are still alive
			 */
			
			alpha = rand.nextInt(creatures.size());
			beta = rand.nextInt(creatures.size());
			
			creatures.get(alpha).kill(creatures.get(beta));
			
			//remove the creatures that are alive 
			if(creatures.get(beta).alive == false) {
				creatures.remove(beta);
			}
			i++;
			
		}
		displayCreatures();
	}

	public static void displayCreatures() {
		System.out.println("Creatures that are still alive:");
		for(MagicalCreature e: creatures) {
			System.out.println(e.getName());
		}
		System.out.println();
	}
}
